{"ast":null,"code":"import _objectSpread from\"/Users/siteoptz/siteoptz-scraping/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const UserContext=/*#__PURE__*/createContext();export const useUser=()=>{const context=useContext(UserContext);if(!context){throw new Error('useUser must be used within a UserProvider');}return context;};export const UserProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[currentPlan,setCurrentPlan]=useState('free');const[loading,setLoading]=useState(true);useEffect(()=>{// Simulate loading user data\nconst loadUser=async()=>{try{// In a real app, this would fetch from your API\nconst userData={id:'user_123',email:'user@example.com',name:'John Doe',plan:currentPlan,subscription:null};setUser(userData);setCurrentPlan(userData.plan);}catch(error){console.error('Error loading user:',error);}finally{setLoading(false);}};loadUser();},[]);const upgradePlan=async newPlan=>{try{setCurrentPlan(newPlan);// Update user plan in backend\nif(user){setUser(_objectSpread(_objectSpread({},user),{},{plan:newPlan}));}}catch(error){console.error('Error upgrading plan:',error);throw error;}};const value={user,currentPlan,loading,upgradePlan,setCurrentPlan};return/*#__PURE__*/_jsx(UserContext.Provider,{value:value,children:children});};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsx","_jsx","UserContext","useUser","context","Error","UserProvider","_ref","children","user","setUser","currentPlan","setCurrentPlan","loading","setLoading","loadUser","userData","id","email","name","plan","subscription","error","console","upgradePlan","newPlan","_objectSpread","value","Provider"],"sources":["/Users/siteoptz/siteoptz-scraping/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\n\nconst UserContext = createContext();\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [currentPlan, setCurrentPlan] = useState('free');\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Simulate loading user data\n    const loadUser = async () => {\n      try {\n        // In a real app, this would fetch from your API\n        const userData = {\n          id: 'user_123',\n          email: 'user@example.com',\n          name: 'John Doe',\n          plan: currentPlan,\n          subscription: null\n        };\n        \n        setUser(userData);\n        setCurrentPlan(userData.plan);\n      } catch (error) {\n        console.error('Error loading user:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadUser();\n  }, []);\n\n  const upgradePlan = async (newPlan) => {\n    try {\n      setCurrentPlan(newPlan);\n      // Update user plan in backend\n      if (user) {\n        setUser({ ...user, plan: newPlan });\n      }\n    } catch (error) {\n      console.error('Error upgrading plan:', error);\n      throw error;\n    }\n  };\n\n  const value = {\n    user,\n    currentPlan,\n    loading,\n    upgradePlan,\n    setCurrentPlan\n  };\n\n  return (\n    <UserContext.Provider value={value}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"],"mappings":"sHAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE9E,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAO,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAGP,UAAU,CAACK,WAAW,CAAC,CACvC,GAAI,CAACE,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,4CAA4C,CAAC,CAC/D,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC,CAED,MAAO,MAAM,CAAAE,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACa,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,MAAM,CAAC,CACtD,KAAM,CAACe,OAAO,CAAEC,UAAU,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CAE5CC,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAgB,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAC3B,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,CACfC,EAAE,CAAE,UAAU,CACdC,KAAK,CAAE,kBAAkB,CACzBC,IAAI,CAAE,UAAU,CAChBC,IAAI,CAAET,WAAW,CACjBU,YAAY,CAAE,IAChB,CAAC,CAEDX,OAAO,CAACM,QAAQ,CAAC,CACjBJ,cAAc,CAACI,QAAQ,CAACI,IAAI,CAAC,CAC/B,CAAE,MAAOE,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC7C,CAAC,OAAS,CACRR,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDC,QAAQ,CAAC,CAAC,CACZ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAS,WAAW,CAAG,KAAO,CAAAC,OAAO,EAAK,CACrC,GAAI,CACFb,cAAc,CAACa,OAAO,CAAC,CACvB;AACA,GAAIhB,IAAI,CAAE,CACRC,OAAO,CAAAgB,aAAA,CAAAA,aAAA,IAAMjB,IAAI,MAAEW,IAAI,CAAEK,OAAO,EAAE,CAAC,CACrC,CACF,CAAE,MAAOH,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAED,KAAM,CAAAK,KAAK,CAAG,CACZlB,IAAI,CACJE,WAAW,CACXE,OAAO,CACPW,WAAW,CACXZ,cACF,CAAC,CAED,mBACEX,IAAA,CAACC,WAAW,CAAC0B,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAAnB,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}