{"ast":null,"code":"// Cyfe Dashboard Integration Service\nimport{pricingPlans}from'../pricing-plans';class CyfeService{constructor(){this.baseUrl=process.env.REACT_APP_CYFE_BASE_URL||'https://app.cyfe.com';this.apiKey=process.env.REACT_APP_CYFE_API_KEY;this.whiteLabelDomain=process.env.REACT_APP_CYFE_WHITELABEL_DOMAIN;}// Dashboard configuration for each plan tier\ngetDashboardConfig(planId){const planConfigs={free:{dashboards:[{id:'basic_analytics',name:'Basic Analytics',url:\"\".concat(this.baseUrl,\"/dashboards/basic_analytics\"),description:'Basic usage statistics and performance metrics',widgets:['usage_stats','request_timeline','error_rates']}],maxDashboards:1,maxUsers:1,features:['basic_widgets','standard_refresh']},starter:{dashboards:[{id:'advanced_analytics',name:'Advanced Analytics',url:\"\".concat(this.baseUrl,\"/dashboards/advanced_analytics\"),description:'Detailed analytics with API usage and scheduling',widgets:['usage_stats','api_calls','scheduled_jobs','performance_metrics']},{id:'api_monitoring',name:'API Monitoring',url:\"\".concat(this.baseUrl,\"/dashboards/api_monitoring\"),description:'Monitor API calls, response times, and errors',widgets:['api_requests','response_times','error_tracking','rate_limits']}],maxDashboards:2,maxUsers:3,features:['custom_widgets','real_time_data','data_export']},pro:{dashboards:[{id:'comprehensive_analytics',name:'Comprehensive Analytics',url:\"\".concat(this.baseUrl,\"/dashboards/comprehensive_analytics\"),description:'Full analytics suite with team collaboration',widgets:['usage_stats','team_activity','project_metrics','cost_analysis']},{id:'team_dashboard',name:'Team Dashboard',url:\"\".concat(this.baseUrl,\"/dashboards/team_dashboard\"),description:'Team collaboration and project management',widgets:['team_performance','project_status','collaboration_metrics']},{id:'advanced_monitoring',name:'Advanced Monitoring',url:\"\".concat(this.baseUrl,\"/dashboards/advanced_monitoring\"),description:'Advanced system monitoring and alerts',widgets:['system_health','alert_management','performance_trends']},{id:'custom_reports',name:'Custom Reports',url:\"\".concat(this.baseUrl,\"/dashboards/custom_reports\"),description:'Custom reporting and data visualization',widgets:['custom_charts','report_builder','data_export']}],maxDashboards:4,maxUsers:10,features:['custom_dashboards','advanced_widgets','scheduled_reports','team_collaboration']},enterprise:{dashboards:[{id:'enterprise_overview',name:'Enterprise Overview',url:\"\".concat(this.baseUrl,\"/dashboards/enterprise_overview\"),description:'Executive dashboard with key performance indicators',widgets:['kpi_overview','business_metrics','executive_summary']},{id:'operational_dashboard',name:'Operational Dashboard',url:\"\".concat(this.baseUrl,\"/dashboards/operational_dashboard\"),description:'Real-time operational monitoring and management',widgets:['system_status','alert_center','performance_monitoring']},{id:'compliance_dashboard',name:'Compliance Dashboard',url:\"\".concat(this.baseUrl,\"/dashboards/compliance_dashboard\"),description:'Compliance monitoring and audit trails',widgets:['compliance_status','audit_logs','security_metrics']},{id:'custom_business_dashboard',name:'Custom Business Dashboard',url:\"\".concat(this.baseUrl,\"/dashboards/custom_business\"),description:'Custom dashboard tailored to business needs',widgets:['custom_kpis','business_intelligence','custom_analytics']},{id:'multi_region_dashboard',name:'Multi-Region Dashboard',url:\"\".concat(this.baseUrl,\"/dashboards/multi_region\"),description:'Global performance and regional analytics',widgets:['regional_performance','global_metrics','latency_monitoring']}],maxDashboards:-1,// Unlimited\nmaxUsers:-1,// Unlimited\nfeatures:['unlimited_dashboards','custom_branding','sla_monitoring','compliance_tools','multi_region_support']}};return planConfigs[planId]||planConfigs.free;}// Generate authenticated dashboard URL\ngenerateDashboardUrl(dashboardId,userId,planId){const config=this.getDashboardConfig(planId);const dashboard=config.dashboards.find(d=>d.id===dashboardId);if(!dashboard){throw new Error(\"Dashboard \".concat(dashboardId,\" not available for plan \").concat(planId));}// For white-label setup, use your custom domain\nconst baseUrl=this.whiteLabelDomain||this.baseUrl;// Generate secure token for dashboard access\nconst token=this.generateAccessToken(userId,planId,dashboardId);return\"\".concat(baseUrl,\"/embed/\").concat(dashboardId,\"?token=\").concat(token,\"&user=\").concat(userId,\"&plan=\").concat(planId);}// Generate access token for dashboard authentication\ngenerateAccessToken(userId,planId,dashboardId){// In a real implementation, this would be generated on your backend\n// and validated by Cyfe's white-label system\nconst payload={userId,planId,dashboardId,timestamp:Date.now(),expires:Date.now()+24*60*60*1000// 24 hours\n};// This should be signed with your secret key\nreturn btoa(JSON.stringify(payload));}// Check if user has access to a specific dashboard\nhasDashboardAccess(userId,planId,dashboardId){const config=this.getDashboardConfig(planId);return config.dashboards.some(dashboard=>dashboard.id===dashboardId);}// Get available dashboards for a plan\ngetAvailableDashboards(planId){const config=this.getDashboardConfig(planId);return config.dashboards;}// Get dashboard limits for a plan\ngetDashboardLimits(planId){const config=this.getDashboardConfig(planId);return{maxDashboards:config.maxDashboards,maxUsers:config.maxUsers,features:config.features};}// Push data to Cyfe dashboard (using Cyfe Push API)\nasync pushDataToDashboard(dashboardId,widgetId,data){const endpoint=\"\".concat(this.baseUrl,\"/api/push/\").concat(dashboardId,\"/\").concat(widgetId);try{const response=await fetch(endpoint,{method:'POST',headers:{'Content-Type':'application/json','Authorization':\"Bearer \".concat(this.apiKey)},body:JSON.stringify({data:data,onduplicate:'update',color:'#3b82f6',type:'line'})});if(!response.ok){throw new Error(\"Failed to push data: \".concat(response.statusText));}return await response.json();}catch(error){console.error('Error pushing data to Cyfe:',error);throw error;}}// Get upgrade suggestions based on current usage\ngetUpgradeSuggestions(currentPlan,usage){var _pricingPlans$current;const suggestions=[];const config=this.getDashboardConfig(currentPlan);const nextPlan=(_pricingPlans$current=pricingPlans[currentPlan])===null||_pricingPlans$current===void 0?void 0:_pricingPlans$current.upgradeTo;if(!nextPlan)return suggestions;// Check dashboard usage\nif(config.maxDashboards>0&&usage.dashboardCount>=config.maxDashboards){suggestions.push({type:'dashboard_limit',message:\"You've reached your dashboard limit (\".concat(config.maxDashboards,\"). Upgrade to \").concat(nextPlan,\" for more dashboards.\"),priority:'high'});}// Check user limit\nif(config.maxUsers>0&&usage.userCount>=config.maxUsers){suggestions.push({type:'user_limit',message:\"You've reached your user limit (\".concat(config.maxUsers,\"). Upgrade to \").concat(nextPlan,\" for more users.\"),priority:'high'});}// Check feature usage\nif(usage.requiresAdvancedFeatures&&!config.features.includes('custom_dashboards')){suggestions.push({type:'feature_limit',message:'You need advanced features like custom dashboards. Upgrade to access more capabilities.',priority:'medium'});}return suggestions;}// Validate dashboard access token\nvalidateAccessToken(token){try{const payload=JSON.parse(atob(token));// Check if token is expired\nif(Date.now()>payload.expires){return{valid:false,reason:'expired'};}return{valid:true,userId:payload.userId,planId:payload.planId,dashboardId:payload.dashboardId};}catch(error){return{valid:false,reason:'invalid'};}}}export default new CyfeService();","map":{"version":3,"names":["pricingPlans","CyfeService","constructor","baseUrl","process","env","REACT_APP_CYFE_BASE_URL","apiKey","REACT_APP_CYFE_API_KEY","whiteLabelDomain","REACT_APP_CYFE_WHITELABEL_DOMAIN","getDashboardConfig","planId","planConfigs","free","dashboards","id","name","url","concat","description","widgets","maxDashboards","maxUsers","features","starter","pro","enterprise","generateDashboardUrl","dashboardId","userId","config","dashboard","find","d","Error","token","generateAccessToken","payload","timestamp","Date","now","expires","btoa","JSON","stringify","hasDashboardAccess","some","getAvailableDashboards","getDashboardLimits","pushDataToDashboard","widgetId","data","endpoint","response","fetch","method","headers","body","onduplicate","color","type","ok","statusText","json","error","console","getUpgradeSuggestions","currentPlan","usage","_pricingPlans$current","suggestions","nextPlan","upgradeTo","dashboardCount","push","message","priority","userCount","requiresAdvancedFeatures","includes","validateAccessToken","parse","atob","valid","reason"],"sources":["/Users/siteoptz/siteoptz-scraping/src/services/CyfeService.js"],"sourcesContent":["// Cyfe Dashboard Integration Service\nimport { pricingPlans } from '../pricing-plans';\n\nclass CyfeService {\n  constructor() {\n    this.baseUrl = process.env.REACT_APP_CYFE_BASE_URL || 'https://app.cyfe.com';\n    this.apiKey = process.env.REACT_APP_CYFE_API_KEY;\n    this.whiteLabelDomain = process.env.REACT_APP_CYFE_WHITELABEL_DOMAIN;\n  }\n\n  // Dashboard configuration for each plan tier\n  getDashboardConfig(planId) {\n    const planConfigs = {\n      free: {\n        dashboards: [\n          {\n            id: 'basic_analytics',\n            name: 'Basic Analytics',\n            url: `${this.baseUrl}/dashboards/basic_analytics`,\n            description: 'Basic usage statistics and performance metrics',\n            widgets: ['usage_stats', 'request_timeline', 'error_rates']\n          }\n        ],\n        maxDashboards: 1,\n        maxUsers: 1,\n        features: ['basic_widgets', 'standard_refresh']\n      },\n      starter: {\n        dashboards: [\n          {\n            id: 'advanced_analytics',\n            name: 'Advanced Analytics',\n            url: `${this.baseUrl}/dashboards/advanced_analytics`,\n            description: 'Detailed analytics with API usage and scheduling',\n            widgets: ['usage_stats', 'api_calls', 'scheduled_jobs', 'performance_metrics']\n          },\n          {\n            id: 'api_monitoring',\n            name: 'API Monitoring',\n            url: `${this.baseUrl}/dashboards/api_monitoring`,\n            description: 'Monitor API calls, response times, and errors',\n            widgets: ['api_requests', 'response_times', 'error_tracking', 'rate_limits']\n          }\n        ],\n        maxDashboards: 2,\n        maxUsers: 3,\n        features: ['custom_widgets', 'real_time_data', 'data_export']\n      },\n      pro: {\n        dashboards: [\n          {\n            id: 'comprehensive_analytics',\n            name: 'Comprehensive Analytics',\n            url: `${this.baseUrl}/dashboards/comprehensive_analytics`,\n            description: 'Full analytics suite with team collaboration',\n            widgets: ['usage_stats', 'team_activity', 'project_metrics', 'cost_analysis']\n          },\n          {\n            id: 'team_dashboard',\n            name: 'Team Dashboard',\n            url: `${this.baseUrl}/dashboards/team_dashboard`,\n            description: 'Team collaboration and project management',\n            widgets: ['team_performance', 'project_status', 'collaboration_metrics']\n          },\n          {\n            id: 'advanced_monitoring',\n            name: 'Advanced Monitoring',\n            url: `${this.baseUrl}/dashboards/advanced_monitoring`,\n            description: 'Advanced system monitoring and alerts',\n            widgets: ['system_health', 'alert_management', 'performance_trends']\n          },\n          {\n            id: 'custom_reports',\n            name: 'Custom Reports',\n            url: `${this.baseUrl}/dashboards/custom_reports`,\n            description: 'Custom reporting and data visualization',\n            widgets: ['custom_charts', 'report_builder', 'data_export']\n          }\n        ],\n        maxDashboards: 4,\n        maxUsers: 10,\n        features: ['custom_dashboards', 'advanced_widgets', 'scheduled_reports', 'team_collaboration']\n      },\n      enterprise: {\n        dashboards: [\n          {\n            id: 'enterprise_overview',\n            name: 'Enterprise Overview',\n            url: `${this.baseUrl}/dashboards/enterprise_overview`,\n            description: 'Executive dashboard with key performance indicators',\n            widgets: ['kpi_overview', 'business_metrics', 'executive_summary']\n          },\n          {\n            id: 'operational_dashboard',\n            name: 'Operational Dashboard',\n            url: `${this.baseUrl}/dashboards/operational_dashboard`,\n            description: 'Real-time operational monitoring and management',\n            widgets: ['system_status', 'alert_center', 'performance_monitoring']\n          },\n          {\n            id: 'compliance_dashboard',\n            name: 'Compliance Dashboard',\n            url: `${this.baseUrl}/dashboards/compliance_dashboard`,\n            description: 'Compliance monitoring and audit trails',\n            widgets: ['compliance_status', 'audit_logs', 'security_metrics']\n          },\n          {\n            id: 'custom_business_dashboard',\n            name: 'Custom Business Dashboard',\n            url: `${this.baseUrl}/dashboards/custom_business`,\n            description: 'Custom dashboard tailored to business needs',\n            widgets: ['custom_kpis', 'business_intelligence', 'custom_analytics']\n          },\n          {\n            id: 'multi_region_dashboard',\n            name: 'Multi-Region Dashboard',\n            url: `${this.baseUrl}/dashboards/multi_region`,\n            description: 'Global performance and regional analytics',\n            widgets: ['regional_performance', 'global_metrics', 'latency_monitoring']\n          }\n        ],\n        maxDashboards: -1, // Unlimited\n        maxUsers: -1, // Unlimited\n        features: ['unlimited_dashboards', 'custom_branding', 'sla_monitoring', 'compliance_tools', 'multi_region_support']\n      }\n    };\n\n    return planConfigs[planId] || planConfigs.free;\n  }\n\n  // Generate authenticated dashboard URL\n  generateDashboardUrl(dashboardId, userId, planId) {\n    const config = this.getDashboardConfig(planId);\n    const dashboard = config.dashboards.find(d => d.id === dashboardId);\n    \n    if (!dashboard) {\n      throw new Error(`Dashboard ${dashboardId} not available for plan ${planId}`);\n    }\n\n    // For white-label setup, use your custom domain\n    const baseUrl = this.whiteLabelDomain || this.baseUrl;\n    \n    // Generate secure token for dashboard access\n    const token = this.generateAccessToken(userId, planId, dashboardId);\n    \n    return `${baseUrl}/embed/${dashboardId}?token=${token}&user=${userId}&plan=${planId}`;\n  }\n\n  // Generate access token for dashboard authentication\n  generateAccessToken(userId, planId, dashboardId) {\n    // In a real implementation, this would be generated on your backend\n    // and validated by Cyfe's white-label system\n    const payload = {\n      userId,\n      planId,\n      dashboardId,\n      timestamp: Date.now(),\n      expires: Date.now() + (24 * 60 * 60 * 1000) // 24 hours\n    };\n    \n    // This should be signed with your secret key\n    return btoa(JSON.stringify(payload));\n  }\n\n  // Check if user has access to a specific dashboard\n  hasDashboardAccess(userId, planId, dashboardId) {\n    const config = this.getDashboardConfig(planId);\n    return config.dashboards.some(dashboard => dashboard.id === dashboardId);\n  }\n\n  // Get available dashboards for a plan\n  getAvailableDashboards(planId) {\n    const config = this.getDashboardConfig(planId);\n    return config.dashboards;\n  }\n\n  // Get dashboard limits for a plan\n  getDashboardLimits(planId) {\n    const config = this.getDashboardConfig(planId);\n    return {\n      maxDashboards: config.maxDashboards,\n      maxUsers: config.maxUsers,\n      features: config.features\n    };\n  }\n\n  // Push data to Cyfe dashboard (using Cyfe Push API)\n  async pushDataToDashboard(dashboardId, widgetId, data) {\n    const endpoint = `${this.baseUrl}/api/push/${dashboardId}/${widgetId}`;\n    \n    try {\n      const response = await fetch(endpoint, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${this.apiKey}`\n        },\n        body: JSON.stringify({\n          data: data,\n          onduplicate: 'update',\n          color: '#3b82f6',\n          type: 'line'\n        })\n      });\n\n      if (!response.ok) {\n        throw new Error(`Failed to push data: ${response.statusText}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error pushing data to Cyfe:', error);\n      throw error;\n    }\n  }\n\n  // Get upgrade suggestions based on current usage\n  getUpgradeSuggestions(currentPlan, usage) {\n    const suggestions = [];\n    const config = this.getDashboardConfig(currentPlan);\n    const nextPlan = pricingPlans[currentPlan]?.upgradeTo;\n\n    if (!nextPlan) return suggestions;\n\n    // Check dashboard usage\n    if (config.maxDashboards > 0 && usage.dashboardCount >= config.maxDashboards) {\n      suggestions.push({\n        type: 'dashboard_limit',\n        message: `You've reached your dashboard limit (${config.maxDashboards}). Upgrade to ${nextPlan} for more dashboards.`,\n        priority: 'high'\n      });\n    }\n\n    // Check user limit\n    if (config.maxUsers > 0 && usage.userCount >= config.maxUsers) {\n      suggestions.push({\n        type: 'user_limit',\n        message: `You've reached your user limit (${config.maxUsers}). Upgrade to ${nextPlan} for more users.`,\n        priority: 'high'\n      });\n    }\n\n    // Check feature usage\n    if (usage.requiresAdvancedFeatures && !config.features.includes('custom_dashboards')) {\n      suggestions.push({\n        type: 'feature_limit',\n        message: 'You need advanced features like custom dashboards. Upgrade to access more capabilities.',\n        priority: 'medium'\n      });\n    }\n\n    return suggestions;\n  }\n\n  // Validate dashboard access token\n  validateAccessToken(token) {\n    try {\n      const payload = JSON.parse(atob(token));\n      \n      // Check if token is expired\n      if (Date.now() > payload.expires) {\n        return { valid: false, reason: 'expired' };\n      }\n\n      return { \n        valid: true, \n        userId: payload.userId,\n        planId: payload.planId,\n        dashboardId: payload.dashboardId\n      };\n    } catch (error) {\n      return { valid: false, reason: 'invalid' };\n    }\n  }\n}\n\nexport default new CyfeService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}